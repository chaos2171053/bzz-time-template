{"version":3,"sources":["utils/vscode-helper.ts","pages/list/components/DirectoryForm.tsx","components/DataSet/BasicFields.tsx","components/DataSet/interface/index.ts","components/DataSet/Fields.tsx","components/DataSet/TransportFields.tsx","components/DataSet/index.tsx","pages/list/components/ListForm.tsx","store/index.ts","pages/list/components/MicroServiceForm.tsx","pages/list/components/GenerateList.tsx","pages/list/ListPage.tsx","routes/index.tsx","components/Container.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["VscodeHelper","this","init","window","acquireVsCodeApi","vscode","command","data","postMessage","Panel","Collapse","DirectoryForm","defaultActiveKey","header","Item","label","name","style","width","paddingLeft","paddingRight","rules","required","message","placeholder","Option","Select","BasicFields","FieldType","props","form","DataSetType","useState","paging","setPaging","Group","value","onChange","e","target","setFieldsValue","listDataSet","pageSize","min","FieldTypes","Object","values","key","Date","valueOf","Fields","DataSetFieldName","List","fields","add","remove","direction","map","field","index","baseFieldName","baseFieldKey","fieldKey","className","event","getFieldValue","onFieldNameChange","type","CloseCircleOutlined","onClick","onRemoveField","block","icon","PlusOutlined","TransportFields","BzzDataSet","title","ListForm","size","ListDataSetInitialValues","microService","microServiceName","autoQuery","selection","queryFields","transport","read","url","pageDataSetInitialValues","directoryName","MicroService","layout","labelCol","span","wrapperCol","btnLayout","GenerateList","Form","useForm","submitFlag","setSubmitFlag","useEffect","addEventListener","vscodemessage","success","error","initialValues","onFinish","filter","transformFormValus","console","log","onFinishFailed","errorInfo","htmlType","resetFields","Routes","path","component","withRouter","children","history","watchRouteChange","useCallback","push","pathname","state","Footer","Layout","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baea246d.chunk.js","sourcesContent":["declare const window: any;\n\nclass VscodeHelper {\n  private static vscode: any;\n  constructor() {\n    this.init();\n  }\n  public init() {\n    if (window.acquireVsCodeApi) {\n      VscodeHelper.vscode = window.acquireVsCodeApi();\n    }\n  }\n  public postMessage({ command, data }: { command: string; data: any }) {\n    if (VscodeHelper.vscode) {\n      VscodeHelper.vscode.postMessage({\n        command,\n        data,\n      });\n    }\n  }\n}\n\nexport default VscodeHelper;\n","import React from \"react\";\nimport { Form, Input, Collapse } from \"antd\";\n\nconst { Panel } = Collapse;\n\nfunction DirectoryForm() {\n  return (\n    <>\n      <Collapse defaultActiveKey={[\"directoryName\"]}>\n        <Panel header=\"目录配置\" key=\"directoryName\">\n          <Form.Item\n            label=\"目录名\"\n            name=\"directoryName\"\n            style={{ width: \"100%\", paddingLeft: \"25px\", paddingRight: \"25px\" }}\n            rules={[\n              {\n                required: true,\n                message: \"请输入目录名\",\n              },\n            ]}\n          >\n            <Input placeholder=\"目录名最好对应路由名\" />\n          </Form.Item>\n        </Panel>\n      </Collapse>\n    </>\n  );\n}\n\nexport default DirectoryForm;\n","import React, { useState } from \"react\";\nimport { Form, Radio, InputNumber, Select } from \"antd\";\nimport { RadioChangeEvent } from \"antd/lib/radio/interface\";\nimport { FieldCommonProps } from \"./interface\";\n\nconst { Option } = Select;\n\n/**\n * DataSet 的 基本字段\n */\n\nfunction BasicFields(props: FieldCommonProps) {\n  const { form, DataSetType } = props;\n\n  const [paging, setPaging] = useState(true);\n\n  const onPagingChange = (e: RadioChangeEvent) => {\n    const value = e?.target?.value;\n    form.setFieldsValue({\n      listDataSet: {\n        pageSize: 10,\n      },\n    });\n    if (value) {\n      setPaging(true);\n    } else {\n      setPaging(false);\n    }\n  };\n\n  return (\n    <>\n      <Form.Item\n        label=\"初始化后自动查询\"\n        name={[DataSetType, \"autoQuery\"]}\n        rules={[\n          {\n            required: true,\n            message: \"请选择 autoQuery\",\n          },\n        ]}\n      >\n        <Radio.Group>\n          <Radio value={true}>是</Radio>\n          <Radio value={false}>否</Radio>\n        </Radio.Group>\n      </Form.Item>\n      <Form.Item\n        label=\"是否分页\"\n        name={[DataSetType, \"paging\"]}\n        rules={[\n          {\n            required: true,\n            message: \"请选择 paging\",\n          },\n        ]}\n      >\n        <Radio.Group onChange={onPagingChange}>\n          <Radio value={true}>是</Radio>\n          <Radio value={false}>否</Radio>\n        </Radio.Group>\n      </Form.Item>\n      {paging ? (\n        <>\n          <Form.Item\n            label=\"每页数据条数\"\n            name={[DataSetType, \"pageSize\"]}\n            rules={[\n              {\n                required: paging,\n                message: \"请输入 pageSize\",\n              },\n            ]}\n          >\n            <InputNumber min={1} />\n          </Form.Item>\n        </>\n      ) : null}\n      <Form.Item\n        label=\"选择模式\"\n        name={[DataSetType, \"selection\"]}\n        rules={[\n          {\n            required: true,\n            message: \"请选择 selection\",\n          },\n        ]}\n      >\n        <Select>\n          <Option value=\"none\">无</Option>\n          <Option value=\"single\">单选</Option>\n          <Option value=\"multiple\">多选</Option>\n        </Select>\n      </Form.Item>\n    </>\n  );\n}\n\nexport default BasicFields;\n","import { FormInstance } from \"antd/lib/form/hooks/useForm\";\n\nexport interface FieldCommonProps {\n  form: FormInstance;\n  DataSetType: string; // DataSet 类型： 1. ListDatSet 2.ModalDataSet\n}\n\nexport enum FieldType {\n  auto = \"auto\",\n  boolean = \"boolean\",\n  number = \"number\",\n  currency = \"currency\",\n  string = \"string\",\n  date = \"date\",\n  dateTime = \"dateTime\",\n  week = \"week\",\n  month = \"month\",\n  year = \"year\",\n  time = \"time\",\n  object = \"object\",\n  intl = \"intl\",\n  email = \"email\",\n  url = \"url\",\n  color = \"color\",\n  reactNode = \"reactNode\",\n}\n","import React from \"react\";\nimport { Form, Input, Button, Space, Card, Select, Radio } from \"antd\";\nimport { CloseCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { FieldCommonProps, FieldType } from \"./interface\";\nimport \"./Fields.less\";\n\nconst { Option } = Select;\n\nconst FieldTypes = Object.values(FieldType);\n\nconst key = new Date().valueOf();\n\ninterface FieldsProps extends FieldCommonProps {\n  DataSetFieldName: string;\n}\n\n/**\n * DataSet 的 fields 字段\n */\nfunction Fields(props: FieldsProps) {\n  const { form, DataSetType, DataSetFieldName } = props;\n\n  const onRemoveField = (index: number, remove: Function) => {\n    // TODO: bug 删除成功后，生成的数据还包含删除的数据。\n    remove(index);\n  };\n\n  const onFieldNameChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    index: number\n  ) => {\n    const fields = [...form.getFieldValue(DataSetType)[DataSetFieldName]];\n    fields[index].key = key + e.target.value;\n    form.setFieldsValue({\n      [DataSetType]: {\n        [DataSetFieldName]: [...fields],\n      },\n    });\n  };\n\n  return (\n    <>\n      <Form.List name={[DataSetType, DataSetFieldName]}>\n        {(fields, { add, remove }) => (\n          <>\n            <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n              {fields.map((field, index) => {\n                const baseFieldName = `${field.name}`;\n\n                const baseFieldKey = `${field.fieldKey}__${key + index}`;\n\n                return (\n                  <div\n                    className=\"fields-wrapper\"\n                    key={key + baseFieldKey + index}\n                  >\n                    <Card style={{ width: \"100%\" }}>\n                      <Form.Item\n                        {...field}\n                        key={`${baseFieldKey}__name`}\n                        name={[baseFieldName, \"name\"]}\n                        fieldKey={[`${baseFieldKey}__name`, \"name\"]}\n                        label=\"字段名称 name\"\n                        rules={[{ required: true, message: \"请输入字段名\" }]}\n                      >\n                        <Input\n                          onChange={(\n                            event: React.ChangeEvent<HTMLInputElement>\n                          ) => onFieldNameChange(event, index)}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        {...field}\n                        key={`${baseFieldKey}__label`}\n                        name={[baseFieldName, \"label\"]}\n                        fieldKey={[`${baseFieldKey}__label`, \"label\"]}\n                        label=\"标签名称 label\"\n                        rules={[{ required: true, message: \"请输入标签\" }]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        label=\"是否必填\"\n                        name={[baseFieldName, \"required\"]}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"是否必填\",\n                          },\n                        ]}\n                      >\n                        <Radio.Group>\n                          <Radio value={true}>是</Radio>\n                          <Radio value={false}>否</Radio>\n                        </Radio.Group>\n                      </Form.Item>\n                      <Form.Item\n                        {...field}\n                        key={`${baseFieldKey}__type`}\n                        name={[baseFieldName, \"type\"]}\n                        fieldKey={[`${baseFieldKey}__type`, \"type\"]}\n                        label=\"字段类型 type\"\n                        rules={[\n                          {\n                            required: true,\n                            message: \"请选择字段类型\",\n                          },\n                        ]}\n                      >\n                        <Select>\n                          {FieldTypes.map((type, index) => (\n                            <>\n                              <Option\n                                value={type}\n                                key={baseFieldKey + type + index}\n                              >\n                                {type}\n                              </Option>\n                            </>\n                          ))}\n                        </Select>\n                      </Form.Item>\n                    </Card>\n                    <CloseCircleOutlined\n                      onClick={() => onRemoveField(index, remove)}\n                      className=\"fields-wrapper__minus\"\n                    />\n                  </div>\n                );\n              })}\n            </Space>\n            <Form.Item className=\"form-btn__wrapper\">\n              <Button\n                type=\"dashed\"\n                onClick={() => add()}\n                block\n                icon={<PlusOutlined />}\n                className=\"form-btn\"\n              >\n                添加字段\n              </Button>\n            </Form.Item>\n          </>\n        )}\n      </Form.List>\n    </>\n  );\n}\n\nexport default Fields;\n","import { Form, Input } from \"antd\";\nimport React from \"react\";\nimport { FieldCommonProps } from \"./interface\";\n\nexport default function TransportFields(props: FieldCommonProps) {\n  const { DataSetType } = props;\n  return (\n    <>\n      <Form.Item\n        label=\"查询功能接口地址\"\n        name={[DataSetType, \"transport\", \"read\", \"url\"]}\n        rules={[\n          {\n            required: false,\n            message: \"请输入查询接口\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <p>其他功能暂未开放。</p>\n    </>\n  );\n}\n","import Card from \"antd/lib/card\";\nimport React from \"react\";\nimport BasicFields from \"./BasicFields\";\nimport Fields from \"./Fields\";\nimport { FieldCommonProps } from \"./interface\";\nimport \"./index.less\";\nimport TransportFields from \"./TransportFields\";\n\ninterface BzzDataSetProps extends FieldCommonProps {}\n\nfunction BzzDataSet(props: BzzDataSetProps) {\n  return (\n    <>\n      <div className=\"card-wrapper\">\n        <Card title=\"基本字段\">\n          <BasicFields {...props} />\n        </Card>\n      </div>\n      <div className=\"card-wrapper\">\n        <Card title=\"fields 字段\">\n          <Fields {...props} DataSetFieldName=\"fields\" />\n        </Card>\n      </div>\n      <div className=\"card-wrapper\">\n        <Card title=\"queryFields 字段\">\n          <Fields {...props} DataSetFieldName=\"queryFields\" />\n        </Card>\n      </div>\n      <div className=\"card-wrapper\">\n        <Card title=\"transport 字段\">\n          <TransportFields {...props} />\n        </Card>\n      </div>\n    </>\n  );\n}\n\nexport default BzzDataSet;\n","import React from \"react\";\nimport { Collapse, Space } from \"antd\";\nimport { FormInstance } from \"antd/lib/form/hooks/useForm\";\nimport BzzDataSet from \"../../../components/DataSet\";\nimport \"./ListForm.less\";\n\nconst { Panel } = Collapse;\ninterface ListFormProps {\n  form: FormInstance;\n}\n\nfunction ListForm(props: ListFormProps) {\n  const { form } = props;\n  const DataSetType = \"listDataSet\";\n  return (\n    <>\n      <Collapse defaultActiveKey={[DataSetType]}>\n        <Panel header=\"列表 DataSet 配置\" key={DataSetType}>\n          <Space direction=\"vertical\" size=\"large\" className=\"space-wrapper\">\n            <BzzDataSet form={form} DataSetType={DataSetType} />\n          </Space>\n        </Panel>\n      </Collapse>\n    </>\n  );\n}\n\nexport default ListForm;\n","export interface fieldInitialValuesProps {\n  autoQuery: boolean; // 初始化后自动查询\n  paging: boolean; // 前端分页、后端分页还是不分页\n  pageSize: number; // 分页大小\n  selection: string; // 选择的模式\n  fields: Array<any>; // 列表字段\n  queryFields: Array<any>; // 查询字段\n  transport: {\n    read: {\n      url: string;\n    };\n  };\n}\nexport const fieldInitialValues: fieldInitialValuesProps = {\n  autoQuery: true, // 初始化后自动查询\n  paging: true, // 前端分页、后端分页还是不分页\n  pageSize: 10, // 分页大小\n  selection: \"none\", // 选择的模式\n  fields: [], // 列表字段\n  queryFields: [], // 查询字段\n  transport: {\n    read: {\n      url: \"\",\n    },\n  },\n};\nexport const ListDataSetInitialValues = {\n  // 微服务名\n  microService: {\n    microServiceName: \"\",\n  },\n  ...fieldInitialValues,\n};\n\nexport const formDataSetInitialValues = {};\n\nexport interface pageDataSetInitialValuesProps {\n  directoryName: string;\n  listDataSet: fieldInitialValuesProps;\n}\nexport const pageDataSetInitialValues: pageDataSetInitialValuesProps = {\n  directoryName: \"\", // 一级目录名，同路由名\n  listDataSet: {\n    ...ListDataSetInitialValues,\n  },\n};\n","import React from \"react\";\nimport { Form, Select, Collapse } from \"antd\";\n\nconst { Panel } = Collapse;\nconst { Option } = Select;\n\nexport default function MicroService() {\n  return (\n    <>\n      <Collapse defaultActiveKey={[\"microService\"]}>\n        <Panel header=\"微服务配置\" key=\"microService\">\n          <Form.Item\n            label=\"微服务名称\"\n            name={[\"microService\", \"microServiceName\"]}\n            rules={[\n              {\n                required: true,\n                message: \"请选择微服务名称\",\n              },\n            ]}\n          >\n            <Select>\n              <Option value=\"property\">物业</Option>\n              <Option value=\"payment\">缴费</Option>\n              <Option value=\"passage\">通行</Option>\n            </Select>\n          </Form.Item>\n        </Panel>\n      </Collapse>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Space, message } from \"antd\";\nimport VscodeHelper from \"../../../utils/vscode-helper\";\nimport DirectoryForm from \"./DirectoryForm\";\nimport ListForm from \"./ListForm\";\nimport {\n  pageDataSetInitialValues,\n  pageDataSetInitialValuesProps,\n} from \"../../../store\";\nimport \"./GenerateList.less\";\nimport MicroService from \"./MicroServiceForm\";\n\nconst vscode = new VscodeHelper();\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 20,\n  },\n};\n\nconst btnLayout = {\n  labelCol: {\n    span: 0,\n  },\n  wrapperCol: {\n    span: 24,\n  },\n};\n\nconst transformFormValus = (values: pageDataSetInitialValuesProps) => {\n  // filter undefined fields made by ant design`s bug?\n  if (values.listDataSet) {\n    values.listDataSet.fields = values.listDataSet.fields.filter(\n      (field) => field.name\n    );\n    values.listDataSet.queryFields = values.listDataSet.queryFields.filter(\n      (field) => field.name\n    );\n  }\n  return values;\n};\n\nconst GenerateList = () => {\n  const [form] = Form.useForm();\n  const [submitFlag, setSubmitFlag] = useState(false);\n  const onFinish = (values: any) => {\n    values = transformFormValus(values);\n    console.log(\"Success:\", values);\n    if (submitFlag) {\n      return;\n    }\n    setSubmitFlag(true);\n    vscode.postMessage({\n      command: \"generatePageByForm\",\n      data: values,\n    });\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"message\", (event: any) => {\n      const vscodemessage = event.data; // The JSON data our extension sent\n      const { command, data } = vscodemessage;\n      switch (command) {\n        case \"generate\":\n          if (data.message === \"success\") {\n            message.success(\"生成成功\");\n          } else {\n            message.error(\"生成失败\");\n            setSubmitFlag(false);\n          }\n          break;\n        default:\n          break;\n      }\n    });\n    return () => {};\n  }, []);\n\n  return (\n    <Form\n      {...layout}\n      form={form}\n      name=\"basic\"\n      initialValues={{ ...pageDataSetInitialValues }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      className=\"generate-form\"\n    >\n      <MicroService />\n      <DirectoryForm />\n      <ListForm form={form} />\n      <Form.Item {...btnLayout} className=\"form-btns\">\n        <Space>\n          <Button htmlType=\"button\" onClick={onReset}>\n            重置\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\">\n            生成\n          </Button>\n        </Space>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default GenerateList;\n","import React from \"react\";\nimport GenerateList from \"./components/GenerateList\";\n\nexport default function List() {\n  return (\n    <>\n      <GenerateList />\n    </>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport List from \"../pages/list/ListPage\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/list\" component={List} />\n    </Switch>\n  );\n}\n","import React, { useEffect, useCallback } from \"react\";\nimport { withRouter } from \"react-router\";\n\nfunction Container(props: any) {\n  const { children, history } = props;\n\n  console.log(\"history: \", history);\n\n  const watchRouteChange = useCallback(() => {\n    window.addEventListener(\"message\", (event: any) => {\n      const message = event.data; // The JSON data our extension sent\n      const { command, data } = message;\n      switch (command) {\n        case \"route\":\n          data.url &&\n            history.push({\n              pathname: `/${data.url}`,\n              state: data.data,\n            });\n          break;\n        default:\n          break;\n      }\n    });\n  }, [history]);\n\n  useEffect(() => {\n    watchRouteChange();\n  }, [watchRouteChange]);\n\n  return <>{children}</>;\n}\nexport default withRouter(Container);\n","import React, { FC } from \"react\";\nimport { PageHeader, Layout } from \"antd\";\nimport { HashRouter } from \"react-router-dom\";\nimport Main from \"./routes\";\nimport \"./App.css\";\nimport Container from \"./components/Container\";\n\nconst { Footer, Content } = Layout;\n\nconst App: FC = () => (\n  <Layout>\n    <PageHeader title=\"Bzz time Template\" />\n    <HashRouter>\n      <Content>\n        <Container>\n          <Main />\n        </Container>\n      </Content>\n    </HashRouter>\n    <Footer className=\"footer\">\n      Copyright © 2020 @chaos2171053@gmail.com All rights reserved. Based on\n      Antd.\n    </Footer>\n  </Layout>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}